<launch
  <param name="use_sim_time" value="false"/>>
  <param name="robot_description" command="cat $(find mini_max_defs)/urdf/mini-max.urdf" />

  <!-- bring up a create, arbotix --> 
  <node name="create" pkg="irobot_create_2_1" type="driver.py" />
  <node name="arbotix" pkg="arbotix_python" type="driver.py" output="screen">
    <rosparam file="$(find mini_max_defs)/params/mini-max.yaml" command="load" />
  </node>

  <!-- Monitoring and Diagnostics -->
  <node pkg="mini_max_core" type="laptop_battery.py" name="laptop_battery" />
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find mini_max_defs)/params/diagnostics.yaml" />
  </node>

  <!-- bring up the kinect -->
  <node pkg="openni_camera" type="openni_node" name="openni_camera"  output="screen" >
    <param name="registration_type" value="2" />
    <param name="image_input_format" value="6" />
    <param name="point_cloud_resolution" value="1" />
    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
  </node>
  <include file="$(find openni_camera)/launch/kinect_frames.launch"/>
  <node pkg="tf" type="static_transform_publisher" name="kinect_link" args="0 0 0 0 0 0 /head_sensor_frame /openni_camera 100" /> 

  <node pkg="robot_state_publisher" type="state_publisher" name="rob_st_pub" />
</launch>

